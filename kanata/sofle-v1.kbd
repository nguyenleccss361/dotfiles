(defcfg
  process-unmapped-keys      yes
  concurrent-tap-hold        yes
  chords-v2-min-idle         200 ;; the timer during which chords v2 processing is disabled
  movemouse-smooth-diagonals yes ;; non-smooth diagonals when drawing a line in some app
)

(defsrc
  f13   1     2     3     4     5             6     7     8     9     0     -
  tab   q     w     e     r     t             y     u     i     o     p     =
  esc   a     s     d     f     g             h     j     k     l     ;     '
  lsft  z     x     c     v     b             n     m     ,     .     /     \
        grv   lmet  lalt  lctl  spc           bspc  ret   del   [     ]
)

(deflayer base
  XX    _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  @num  _     _     _     _     _             _     _     _     _     @met; _
  @sft  _     _     _     _     _             _     _     _     _     _     @nomod
        @fn   @gui  @ealt @ctab @nav          @bs   @sym  @adel @mofn @ms
)

(deflayer symbol
  XX    f1    f2    f3    f4    f5            f6    f7    f8    f9    f10   f11
  _     S-1   S-2   S-3   S-4   S-5           S-6   S-7   S-8   S-9   S-0   f12
  grv   S-grv S-=   =     S-[   S-]           [     ]     S--   -     S-;   S-'
  _     _     _     \     S-\   _             _     _     S-,   S-.   S-/   _
        _     _     _     _     C-spc         _     _     _     _     _
)

(deflayer number
  XX    _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             S-=   7     8     9     del   _
  _     _     _     _     _     _             0     4     5     6     S-8   _
  _     _     _     _     _     _             -     1     2     3     /     _
        _     lmet  lalt  lctl  @cnav         _     ret   .     _     _ 
)

(deflayer navigation
  XX    _     _     _     _     _             _     _     _     _     _     _
  _     M-1   M-2   M-3   M-4   M-5           M-6   M-7   M-8   M-9   M-0   _
  _     _     _     _     _     _             lft   down  up    rght  _     _
  _     C-S-z _     C-S-c C-S-v _             home  pgdn  pgup  end   ins   _
        _     _     _     _     _             @cbs  S-ret _     _     _ 
)

(deflayer meta-fn
  XX    M-S-1 M-S-2 M-S-3 M-S-4 M-S-5         M-S-6 M-S-7 M-S-8 M-S-9 M-S-0 _
  _     M-1   M-2   M-3   M-4   M-5           M-6   M-7   M-8   M-9   M-0   _
  _     @knav M-S-s M-S-d @vita @vitabar      M-h   M-j   M-k   M-l   _     _
  _     M-z   M-x   M-c   @vim  M-b           M-n   M-m   M-,   M-.   M-/   _
        _     _     _     @;tab @;spc         _     @;ret _     _     _ 
)

(deflayer function
  XX    _     _     _     _     _             _     _     _     _     _     _
  @quit _     _     _     _     nlck          _     _     _     _     _     _
  _     _     _     _     _     prnt          _     mute  volu  pp    _     _
  _     _     _     _     _     _             _     prev  vold  next  _     _
        _     _     _     _     _             _     _     _     _     _ 
)

(deflayer left-modifier
  XX    _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  _     lmet  lalt  lsft  lctl  _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
        _     _     _     _     _             _     _     _     _     _ 
)

(deflayer right-modifier
  XX    _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     lctl  lsft  lalt  lmet  _
  _     _     _     _     _     _             _     _     _     _     _     _
        _     _     _     _     _             _     _     _     _     _ 
)

(deflayer mouse
  XX    _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     mlft  @ms↑  mrgt  mmid  _
  _     _     _     _     _     _             _     @ms←  @ms↓  @ms→  @slw  _
  _     _     _     _     _     _             _     @mwl  @mwd  @mwu  @mwr  _
        _     _     _     _     _             _     _     _     _     _ 
)

(deflayer nomods4Typing
  XX    _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
        _     _     _     _     _             _     _     _     _     _ 
)

(deflayer nomods
  XX    _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  @lay2 _     _     _     _     _             _     _     _     _     _     @nomod
        _     _     _     _     _             _     _     _     _     _ 
)

(defvirtualkeys
  to-base (layer-switch base)
)

(defvar
  letter-keys (
    q w e r t y u i o p =
    a s d f g h j k l ; '
    z x c v b n m , . /
  )
  ;; right-hand-keys (
  ;;   y u i o p =
  ;;   h j k l ; '
  ;;   n m , . /
  ;; )
)

(defalias
  ;; Pinky
  num (layer-while-held number)
  sft (tap-dance 300 (lsft (multi lctl lsft)))
  fn (multi lctl lsft lmet ralt)
  ms (layer-while-held mouse)
  nomod (tap-dance 300 (\ (layer-switch nomods) (layer-switch base)))
  lay2 lrld-next
  
  ;; Macro
  vim (macro C-(x 50 v))           ;; vim mode zsh
  wnav M-S-C-g                     ;; warpd
  knav C-S-A-p                     ;; keynav
  vita C-S-f2                      ;; vivaldi quick command
  vitabar C-S-f3                   ;; vivaldi tab bar
  quit (macro C-(spc 50 esc))      ;; force quit kanata

  ;; handle semicolon for normal typing
  ;spc (macro ; spc)
  ;tab (macro ; tab)
  ;ret (macro ; ret)

  ;; chords
  cbs C-bspc
  tap (multi
    (layer-switch nomods4Typing)
    (on-idle 20 tap-vkey to-base)
  )
  cnav (multi
    lctl
    (layer-while-held navigation)
  )

  ;; Thumb
  gui (tap-dance 500 (lmet (layer-while-held left-modifier)))
  ealt (tap-hold-press 100 150 esc lalt)
  ctab (tap-hold-press 100 150 tab lctl)
  nav (tap-hold-release-keys 100 150 (multi spc @tap) (layer-while-held navigation) $letter-keys)
  bs (tap-hold 100 150 bspc lsft)
  sym (tap-hold-press 100 150 ret (layer-while-held symbol))
  adel (tap-hold-press 100 150 del lalt)
  met; (tap-hold-press 100 150 ; (layer-while-held meta-fn))
  mofn (tap-dance 500 ((layer-while-held function) (layer-while-held right-modifier)))

  ;; Mouse
  ms↑ (movemouse-accel-up 1 1000 1 5)
  ms← (movemouse-accel-left 1 1000 1 5)
  ms↓ (movemouse-accel-down 1 1000 1 5)
  ms→ (movemouse-accel-right 1 1000 1 5)
  mwu (mwheel-up    50 120)
  mwd (mwheel-down  50 120)
  mwl (mwheel-left  50 120)
  mwr (mwheel-right 50 120)
  fst (movemouse-speed 200)
  slw (movemouse-speed 10)
)

;; Modifier
;; (defchordsv2
;;   (del f) lctl 10000 first-release (nomods)
;;   (del f d) (multi lctl lsft) 10000 first-release (nomods)
;;   (del f s) (multi lctl lalt) 10000 first-release (nomods)
;;   (del f a) (multi lctl lmet) 10000 first-release (nomods)
;;   (del f d s) (multi lctl lsft lalt) 10000 first-release (nomods)
;;   (del f d a) (multi lctl lsft lmet) 10000 first-release (nomods)
;;   (del f s a) (multi lctl lalt lmet) 10000 first-release (nomods)
;;   (del d) lsft 10000 first-release (nomods)
;;   (del d a) (multi lsft lmet) 10000 first-release (nomods)
;;   (del d s a) (multi lsft lalt lmet) 10000 first-release (nomods)
;;   (del s) lalt 10000 first-release (nomods)
;;   (del a) lmet 10000 first-release (nomods)
  
;;   (del j) lctl 10000 first-release (nomods)
;;   (del j k) (multi lctl lsft) 10000 first-release (nomods)
;;   (del j l) (multi lctl lalt) 10000 first-release (nomods)
;;   (del j ;) (multi lctl lmet) 10000 first-release (nomods)
;;   (del j k l) (multi lctl lsft lalt) 10000 first-release (nomods)
;;   (del j k ;) (multi lctl lsft lmet) 10000 first-release (nomods)
;;   (del j l ;) (multi lctl lalt lmet) 10000 first-release (nomods)
;;   (del k) lsft 10000 first-release (nomods)
;;   (del k ;) (multi lsft lmet) 10000 first-release (nomods)
;;   (del k l ;) (multi lsft lalt lmet) 10000 first-release (nomods)
;;   (del l) lalt 10000 first-release (nomods)
;;   (del l ;) (multi lalt lmet) 10000 first-release (nomods)
;;   (del ;) lmet 10000 first-release (nomods)
;; )

;; aret (multi (release-key tab) ret) ;; release tab if held and also press enter
;; chq (chord ctrl-qw q)
;; chw (chord ctrl-qw w)
;; (defchords ctrl-qw 1000 (q w) (macro C-S-1 50 C-2))

;; (deflayer base
;;   XX    _     _     _     _     _             _     _     _     _     _     _
;;   _     _     _     _     _     _             _     _     _     _     _     _
;;   @num  @a    @s    @d    @f    _             _     @j    @k    @l    @;    _
;;   @sft  _     _     _     _     _             _     _     _     _     _     @nomod
;;         @fn   @gui  @alt @ctab @nav           @bs  @sym @fun    _     _
;; )

;; (deflayer ctrl
;;   XX    C-1   C-2   C-3   C-4   C-5           C-6    C-7   C-8   C-9   C-0   C--
;;   _     C-q   C-w   C-e   C-r   C-t           C-y    C-u   C-i   C-o   C-p   C-=
;;   _     C-a   C-s   C-d   C-f   C-g           A-b    C-j   C-k   A-f   C-;   C-'
;;   _     C-z   C-x   C-c   C-v   C-b           C-n    C-m   C-,   C-.   C-/   C-\
;;         _     _     _     _     _             A-bspc C-ret C-del _     _ 
;; )

;; (deflayer shift
;;   XX    S-1   S-2   S-3   S-4   S-5           S-6   S-7   S-8   S-9   S-0   S--
;;   _     S-q   S-w   S-e   S-r   S-t           S-y   S-u   S-i   S-o   S-p   S-=
;;   _     S-a   S-s   S-d   S-f   S-g           S-h   S-j   S-k   S-l   S-;   S-'
;;   _     S-z   S-x   S-c   S-v   S-b           S-n   S-m   S-,   S-.   S-/   S-\
;;         _     _     _     _     _             _     _     S-del _     _ 
;; )

;; (deflayer alt
;;   XX    A-1   A-2   A-3   A-4   A-5           A-6   A-7   A-8   A-9   A-0   A--  
;;   _     A-q   A-w   A-e   A-r   A-t           A-y   A-u   A-i   A-o   A-p   A-=
;;   _     A-a   A-s   A-d   A-f   A-g           A-h   A-j   A-k   A-l   A-;   A-'
;;   _     A-z   A-x   A-c   A-v   A-b           A-n   A-m   A-,   A-.   A-/   A-\
;;         _     _     _     _     _             _     _     A-del _     _ 
;; )

;; Home row mod
;; a (tap-hold-release-keys 100 150 (multi a @tap) lmet $left-hand-keys)
;; s (tap-hold-release-keys 100 150 (multi s @tap) lalt $left-hand-keys)
;; d (tap-hold-release-keys 100 150 (multi d @tap) lsft $left-hand-keys)
;; f (tap-hold-release-keys 100 150 (multi f @tap) lctl $left-hand-keys)
;; j (tap-hold-release-keys 100 150 (multi j @tap) lctl $right-hand-keys)
;; k (tap-hold-release-keys 100 150 (multi k @tap) lsft $right-hand-keys)
;; l (tap-hold-release-keys 100 150 (multi l @tap) lalt $right-hand-keys)
;; ; (tap-hold-release-keys 100 150 (multi ; @tap) lmet $right-hand-keys)
