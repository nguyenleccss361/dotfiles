(defsrc
  esc   1     2     3     4     5             6     7     8     9     0     -
  grv   q     w     e     r     t             y     u     i     o     p     \
  caps  a     s     d     f     g             h     j     k     l     ;     '
  lsft  z     x     c     v     b             n     m     ,     .     /     f15
        lalt  f13   lmet  lctl  spc           bspc  tab   ret   f14   ralt
)

(deflayer base
  _     _     _     _     _     _             _     _     _     _     _     _
  @#ms  _     _     _     _     _             _     _     _     _     _     @hyp
  @#num @a    @s    @d    @f    _             _     @j    @k    @l    @;    _
  @sft  _     _     _     _     _             _     _     _     _     _     @#nomod
        _     XX    @met  @ctl  @#nav         @bspc @#sym @#fun XX    _
)

(deflayer symbol
  _     f1    f2    f3    f4    f5            f6    f7    f8    f9    f10   f11
  _     S-1   S-2   S-3   S-4   S-5           S-6   S-7   S-8   S-9   S-0   f12
  S-grv grv   S-=   =     S-[   S-]           [     ]     -     S--   S-\   \
  _     XX    XX    XX    XX    XX            XX    XX    XX    XX    XX    XX
        _     _     _     _     _             _     _     _     _     _    
)

(deflayer number
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             S-8   7     8     9     XX    _
  _     _     _     _     _     _             -     4     5     6     /     _
  _     _     _     _     _     _             S-=   1     2     3     ret   XX
        _     _     _     _     _             _     0     .     _     _
)

(deflayer navigation
  _     _     _     _     _     _             _     _      _     _     _     _
  _     M-1   M-2   M-3   M-4   M-5           M-6   M-7    M-8   M-9   M-0   del
  _     _     _     _     _     _             lft   down   up    rght  caps  _
  _     _     _     _     _     _             home  pgdn   pgup  end   ins   XX
        _     _     _     _     _             C-spc C-bspc _     _     _    
)

(deflayer mouse
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     mlft  @ms↑  mrgt  mmid  _
  _     _     _     _     _     _             _     @ms←  @ms↓  @ms→  _     _
  _     _     _     _     _     _             @mwl  @mwd  @mwu  @mwr  _     XX
        _     _     _     _     _             _     _     _     _     _
)

(deflayer fun
  _     _     _     _     _     _             _     _     _     _     _     _
  _     A-1   A-2   A-3   A-4   A-5           A-6   A-7   A-8   A-9   A-0   _
  _     _     _     _     _     prnt          _     mute  volu  pp    _     _
  _     _     _     _     _     _             _     prev  vold  next  _     XX
        _     _     _     _     _             _     _     _     _     _
)

(deflayer nomods
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     @#nomod
        _     _     _     _     _             _     _     _     _     _
)
(deffakekeys
  to-base (layer-switch base)
)

(defvar
  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
)

(defalias
  ;; Layers
  #nav (tap-hold 100 150 spc (layer-while-held navigation))
  #ms (tap-hold 150 200 grv (layer-while-held mouse))
  #sym (tap-hold 100 150 tab (layer-while-held symbol))
  #num (tap-hold 100 150 esc (layer-while-held number))
  #fun (tap-hold 100 150 ret (layer-while-held fun))
  #nomod (tap-hold 100 500 (layer-switch base) (layer-switch nomods))
  
  ;; Combined key
  bspc (tap-hold 100 150 bspc lsft)
  ctl (tap-dance 300 (lctl (multi lctl lsft) (multi lctl lsft lalt)))
  met (tap-dance 300 (lmet (multi lmet lsft) (multi lmet lsft lctl)))
  sft (tap-dance 300 (lsft (multi lsft lalt) (multi lsft lmet lalt)))
  hyp (multi lctl lsft lmet ralt)
  ;; aret (multi (release-key tab) ret) ;; release tab if held and also press enter

  ;; Home row mod
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap 20)
  )
  ;; z (tap-hold-release-keys 150 200 (multi z @tap) @ctlsh $left-hand-keys)
  a (tap-hold-release-keys 150 200 (multi a @tap) lmet $left-hand-keys)
  s (tap-hold-release-keys 150 200 (multi s @tap) lalt $left-hand-keys)
  d (tap-hold-release-keys 100 150 (multi d @tap) lsft $left-hand-keys)
  f (tap-hold-release-keys 100 150 (multi f @tap) lctl $left-hand-keys)
  j (tap-hold-release-keys 100 150 (multi j @tap) rctl $right-hand-keys)
  k (tap-hold-release-keys 100 150 (multi k @tap) rsft $right-hand-keys)
  l (tap-hold-release-keys 150 200 (multi l @tap) ralt $right-hand-keys)
  ; (tap-hold-release-keys 150 200 (multi ; @tap) rmet $right-hand-keys)

  ;; Mouse
  ms↑ (movemouse-accel-up 1 1000 1 5)
  ms← (movemouse-accel-left 1 1000 1 5)
  ms↓ (movemouse-accel-down 1 1000 1 5)
  ms→ (movemouse-accel-right 1 1000 1 5)
  mwu (mwheel-up    50 120)
  mwd (mwheel-down  50 120)
  mwl (mwheel-left  50 120)
  mwr (mwheel-right 50 120)
)
