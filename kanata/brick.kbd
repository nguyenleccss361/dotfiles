(defcfg
  process-unmapped-keys      yes
  concurrent-tap-hold        yes
  chords-v2-min-idle         200 ;; the timer during which chords v2 processing is disabled
  movemouse-smooth-diagonals yes ;; non-smooth diagonals when drawing a line in some app
)

(defsrc
  esc   1     2     3     4     5          6     7     8     9     0     -          =     bspc          ins
  tab   q     w     e     r     t          y     u     i     o     p     [          ]     \             del
  caps  a     s     d     f     g          h     j     k     l     ;     '          ret                 mute
  lsft  z     x     c     v     b          n     m     ,     .     /     rsft             up
  lctl  lalt  lmet              spc                    ralt  rmet  f13              left  down  rght
)

(deflayer base
  grv   _     _     _     _     _          _     _     _     _     _     _          _     _             @nomod
  _     _     _     _     _     _          _     _     _     _     _     bspc       _     _             _
  @fn2  _     _     _     _     _          _     _     _     _     _     _          _                   _
  @sft  _     _     _     _     _          _     _     _     _     _     _          _
  _     _     _                 @fn                    _     @fun  XX               _     _     _
)

(deflayer function
  _     f1    f2    f3    f4    f5         f6    f7    f8    f9    f10   f11        _     _             _
  _     S-1   S-2   S-3   S-4   S-5        S-6   S-7   S-8   \     S-\   f12        _     _             _
  grv   S-grv S-=   =     S-[   S-]        [     ]     S--   -     S-;   S-'        _                   _
  _     _     _     \     S-\   _          _     _     S-,   S-.   S-/   _          _
  _     _     _                 _                      _     _     XX               _     _     _
)

(deflayer function2
  _     _     _     _     _     _          _     _     _     _     _     _          _     _             _
  _     M-1   M-2   M-3   M-4   M-5        M-6   M-7   M-8   M-9   M-0   del        _     _             _
  _     _     _     _     _     _          lft   down  up    rght  _     _          _                   _
  _     C-S-z _     C-S-c C-S-v _          home  pgdn  pgup  end   _     _          _
  _     _     _                 _                      _     _     XX               _     _     _
)

(deflayer meta-fn
  _     M-S-1 M-S-2 M-S-3 M-S-4 M-S-5      M-S-6 M-S-7 M-S-8 M-S-9 M-S-0 _          _     _             _
  @;tab M-1   M-2   M-3   M-4   M-5        M-6   M-7   M-8   M-9   M-0   _          _     _             _
  _     @knav M-S-s M-S-d @vita @vitabar   M-h   M-j   M-k   M-l   _     _          _                   _
  _     M-z   M-x   M-c   @vim  M-b        M-n   M-m   M-,   M-.   M-/   _          _
  _     _     _                 @;spc                  _     _     XX               _     _     _
)

(deflayer mouse
  _     _     _     _     _     _          _     _     _     _     _     _          _     _             _
  _     mute  volu  pp    _     _          _     mlft  @ms↑  mrgt  mmid  _          _     _             _
  _     prev  vold  next  _     _          _     @ms←  @ms↓  @ms→  _     _          _                   _
  _     _     _     _     _     _          @mwl  @mwd  @mwu  @mwr  _     _          _
  _     _     _                 _                      _     _     XX               _     _     _
)

(deflayer nomods4Typing
  _     _     _     _     _     _          _     _     _     _     _     _          _     _             _
  _     _     _     _     _     _          _     _     _     _     _     _          _     _             _
  _     _     _     _     _     _          _     _     _     _     _     _          _                   _
  _     _     _     _     _     _          _     _     _     _     _     _          _
  _     _     _                 _                      _     _     XX               _     _     _
)

(deflayer nomods
  _     _     _     _     _     _          _     _     _     _     _     _          _     _             @nomod
  _     _     _     _     _     _          _     _     _     _     _     _          _     _             _
  _     _     _     _     _     _          _     _     _     _     _     _          _                   _
  @lay2 _     _     _     _     _          _     _     _     _     _     _          _
  _     _     _                 _                      _     _     XX               _     _     _
)
(defvirtualkeys
  to-base (layer-switch base)
)

(defvar
  letter-keys (
    1 2 3 4 5 6 7 8 9 0 - =
    q w e r t y u i o p bspc ]
    a s d f g h j k l ; '
    z x c v b n m , . /
  )
  ;; right-hand-keys (
  ;;   y u i o p =
  ;;   h j k l ; '
  ;;   n m , . /
  ;; )
)

(defalias
    ;; chords
  tap (multi
    (layer-switch nomods4Typing)
    (on-idle 20 tap-vkey to-base)
  )
  cnav (multi
    lctl
    (layer-while-held function)
  )

  ;; Layers
  fn (tap-hold-release-keys 100 150 (multi spc @tap) (layer-while-held function) $letter-keys)
  fn2 (tap-hold 100 150 esc (layer-while-held function2))
  sft (tap-dance 300 (lsft (multi lctl lsft)))
  ms (layer-while-held mouse)
  lay2 lrld-next
  fun (tap-dance 300 (lmet (multi lctl lsft lmet ralt)))
  nomod (tap-dance 300 (ins (layer-switch nomods) (layer-switch base)))

  ;; Macro
  vim (macro C-(x 50 v))           ;; vim mode zsh
  wnav M-S-C-g                     ;; warpd
  knav C-S-A-p                     ;; keynav
  vita C-S-f2                      ;; vivaldi quick command
  vitabar C-S-f3                   ;; vivaldi tab bar
  quit (macro C-(spc 50 esc))      ;; force quit kanata

  ;; handle semicolon for normal typing
  ;spc (macro ; spc)
  ;tab (macro ; tab)

  ;; Mouse
  ms↑ (movemouse-accel-up 1 1000 1 5)
  ms← (movemouse-accel-left 1 1000 1 5)
  ms↓ (movemouse-accel-down 1 1000 1 5)
  ms→ (movemouse-accel-right 1 1000 1 5)
  mwu (mwheel-up    50 120)
  mwd (mwheel-down  50 120)
  mwl (mwheel-left  50 120)
  mwr (mwheel-right 50 120)
)

;; Home row mod
;; tap (multi
;;   (layer-switch nomods)
;;   (on-idle-fakekey to-base tap 20)
;; )
;; a (tap-hold-release-keys 150 200 (multi a @tap) lmet $left-hand-keys)
;; s (tap-hold-release-keys 150 200 (multi s @tap) lalt $left-hand-keys)
;; d (tap-hold-release-keys 100 150 (multi d @tap) lsft $left-hand-keys)
;; f (tap-hold-release-keys 100 150 (multi f @tap) lctl $left-hand-keys)
;; j (tap-hold-release-keys 100 150 (multi j @tap) rctl $right-hand-keys)
;; k (tap-hold-release-keys 100 150 (multi k @tap) rsft $right-hand-keys)
;; l (tap-hold-release-keys 150 200 (multi l @tap) ralt $right-hand-keys)
;; ; (tap-hold-release-keys 150 200 (multi ; @tap) rmet $right-hand-keys)
