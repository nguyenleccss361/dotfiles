(defsrc
  esc   1     2     3     4     5             6     7     8     9     0     -
  tab   q     w     e     r     t             y     u     i     o     p     bspc
  caps  a     s     d     f     g             h     j     k     l     ;     '
  lmet  z     x     c     v     b             n     m     ,     .     /     rmet
        lalt  rsft  lctl  lsft  spc           ret   =     [     ]     \
)

(deflayer base
  grv   _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  @caps @a    @s    @d    @f    _             _     @j    @k    @l    @;    _
  _     _     _     _     _     _             _     _     _     _     _     @#nomod
        _     @#ms  _     _     @#nav         @ret  @#sym @#num @hyp  @#fun
)

(deflayer symbol
  _     _     _     _     _     _             _     _     _     _     _     _
  _     S-[   S-7   S-8   S-9   S-]           _     _     _     _     _     _
  _     S-;   S-4   S-5   S-6   S-=           _     _     _     _     _     _
  _     S-grv S-1   S-2   S-3   S-\           _     _     _     _     _     _
        _     _     S-9   S-0   S--           _     _     _     _     _    
)

(deflayer number
  _     _     _     _     _     _             _     _     _     _     _     _
  _     [     7     8     9     ]             _     _     _     _     _     _
  _     ;     4     5     6     =             _     _     _     _     _     _
  _     grv   1     2     3     \             _     _     _     _     _     _
        _     nlck  .     0     -             _     _     _     _     _
)

(deflayer navigation
  _     _     _     _     _     _             _     _     _     _     _     _
  _     M-1   M-2   M-3   M-4   M-5           M-6   M-7   M-8   M-9   M-0   del
  _     _     _     _     C-S-f C-S-g         lft   down  up    rght  caps  _
  _     @undo C-S-x @cpy  @pst  _             home  pgdn  pgup  end   ins   _
        _     _     _     _     _             _     _     _     _     _    
)

(deflayer mouse
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     mlft  @ms↑  mrgt  mmid  _
  _     _     _     _     _     _             _     @ms←  @ms↓  @ms→  _     _
  _     _     _     _     _     _             @mwl  @mwd  @mwu  @mwr  _     _
        _     _     _     _     _             _     _     _     _     _
)

(deflayer fun
  _     _     _     _     _     _             _     _     _     _     _     _
  _     f12   f7    f8    f9    prnt          _     mute  volu  pp    _     _
  _     f11   f4    f5    f6    _             _     prev  vold  next  _     _
  _     f10   f1    f2    f3    _             _     _     _     _     _     _
        _     _     _     _     _             _     _     _     _     _
)

(deflayer nomods
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     _
  _     _     _     _     _     _             _     _     _     _     _     @#nomod
        _     _     _     _     _             _     _     _     _     _
)
(deffakekeys
  to-base (layer-switch base)
)

(defvar
  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
)

(defalias
  ;; Layers
  #nav (tap-hold 100 150 spc (layer-while-held navigation))
  #ms (layer-while-held mouse)
  #sym (layer-while-held symbol)
  #num (layer-while-held number)
  #fun (layer-while-held fun)
  #nomod (tap-hold 100 500 (layer-switch base) (layer-switch nomods))
  
  ;; Combined keys
  caps (tap-hold 150 200 esc lctl)
  ret (tap-hold 150 200 ret lalt)
  hyp (multi lsft lctl lmet ralt)
  cpy C-S-c
  pst C-S-v
  undo C-S-z

  ;; Home row mod
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap 20)
  )
  a (tap-hold-release-keys 150 200 (multi a @tap) lmet $left-hand-keys)
  s (tap-hold-release-keys 150 200 (multi s @tap) lalt $left-hand-keys)
  d (tap-hold-release-keys 100 150 (multi d @tap) lsft $left-hand-keys)
  f (tap-hold-release-keys 100 150 (multi f @tap) lctl $left-hand-keys)
  j (tap-hold-release-keys 100 150 (multi j @tap) rctl $right-hand-keys)
  k (tap-hold-release-keys 100 150 (multi k @tap) rsft $right-hand-keys)
  l (tap-hold-release-keys 150 200 (multi l @tap) ralt $right-hand-keys)
  ; (tap-hold-release-keys 150 200 (multi ; @tap) rmet $right-hand-keys)

  ;; Mouse
  ms↑ (movemouse-accel-up 1 1000 1 5)
  ms← (movemouse-accel-left 1 1000 1 5)
  ms↓ (movemouse-accel-down 1 1000 1 5)
  ms→ (movemouse-accel-right 1 1000 1 5)
  mwu (mwheel-up    50 120)
  mwd (mwheel-down  50 120)
  mwl (mwheel-left  50 120)
  mwr (mwheel-right 50 120)
)
